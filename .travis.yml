# NB: don't set `language: haskell` here

# explicitly request legacy non-sudo based build environment
sudo: required

# only some branches are build
# branches:
#   except:
#     - dev-untracked

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - CABALVER=1.22 GHCVER=7.10.3
 - CABALVER=1.24 GHCVER=8.0.1
# - CABALVER=head GHCVER=head   # see section about GHC HEAD snapshots

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - travis_retry cabal update
 

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - cabal sandbox init
 - git clone https://github.com/forsyde/type-level.git type-level
 - git clone https://github.com/forsyde/parameterized-data.git parameterized-data
 - cabal sandbox add-source type-level
 - cabal sandbox add-source parameterized-data
 - cabal install --dependencies-only

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
# - cabal configure --enable-tests -v2  # -v2 provides useful information for debugging
 - cabal configure -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
